import { test, expect, chromium } from '@playwright/test';

test('Test 2fa verifications', async ({ page }) => {
   
  await page.goto('https://t50008-s50013.sb.gdev09.gcp.kibocommerce.com/user/login');
  await page.locator('input[name="email"]').click();
  await page.locator('input[name="email"]').fill('rohan.birla@test.com');
  await page.locator('input[name="password"]').click();
  await page.locator('input[name="password"]').fill('test12');
  await page.getByRole('button', { name: 'Log In' }).click();
  await expect(page.locator('h3')).toContainText('Verification Required');
  await page.getByText('A 6-digit verification code').click();
  await expect(page.locator('section')).toContainText('A 6-digit verification code has been sent to rohan.birla@test.com. The code expires shortly, so please enter it soon.');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Verification Code');
  await expect(page.getByRole('textbox', { name: 'Verification Code' })).toBeEmpty();
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Resend Code');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Back to Login');
  await page.getByRole('link', { name: 'Resend Code' }).click();
  await expect.soft(page.locator('section')).toContainText('A 6-digit verification code has been sent to rohan.birla@test.com. The code expires shortly, so please enter it soon.');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await expect(page.locator('section')).toContainText('The code you entered is incorrect. Please try again.');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await expect(page.locator('section')).toContainText('Too many attempts. Please request a new code.');
  await page.getByRole('link', { name: 'Request New Code' }).click();
  await expect(page.getByRole('textbox', { name: 'Verification Code' })).toBeVisible();
  await page.getByText('A 6-digit verification code').click();
  await expect.soft(page.locator('section')).toContainText('A 6-digit verification code has been sent to rohan.birla@test.com. The code expires shortly, so please enter it soon.');
});

test('Test OTP verification', async ({ page }) => {
  await page.goto('https://t50008-s50013.sb.gdev09.gcp.kibocommerce.com/user/login');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Login with One-Time Password');
  await page.getByRole('link', { name: 'Login with One-Time Password' }).click();
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Email Address');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Request Code');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Back to Password Login');
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('rohan.bi@test.com');
  await page.getByRole('button', { name: 'Request Code' }).click();
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Failed to send code. Please try again.');
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('rohan.birla@test.com');
  await page.getByRole('button', { name: 'Request Code' }).click();
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Verification Code');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('If an account with that email address exists, a code has been sent to it.');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Resend Code');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Back to Password Login');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('The code you entered is incorrect. Please try again.');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
   await page.getByRole('textbox', { name: 'Verification Code' }).click();
  await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Too many attempts. Please request a new code.');
  await expect(page.locator('form[name="mz-loginform"]')).toContainText('Request New Code');
  await page.getByRole('link', { name: 'Request New Code' }).click();
});

test('Test 2fa verification from order status screen', async ({ page }) => {
await page.goto('https://t50008-s50013.sb.gdev09.gcp.kibocommerce.com/');

await page.getByRole('link', { name: 'Order Status' }).click();
await expect(page.locator('#page-content')).toContainText('Orders placed with your account');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('User Name or Email Address');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Password');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Login with One-Time Password');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Log In');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Forgot your password');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Create an Account');
await page.locator('input[name="email"]').click();
await page.locator('input[name="email"]').fill('rohan.birla@test.com');
await page.locator('input[name="password"]').click();
await page.locator('input[name="password"]').fill('test12');
await page.getByRole('button', { name: 'Log In' }).click();
await expect(page.locator('#page-content')).toContainText('Orders placed with your account');
await expect(page.locator('h3')).toContainText('Verification Required');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Verification Code');
await expect(page.getByRole('textbox', { name: 'Verification Code' })).toBeEmpty();
await expect(page.locator('section')).toContainText('A 6-digit verification code has been sent to rohan.birla@test.com. The code expires shortly, so please enter it soon.');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Resend Code');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Back to Login');
await page.getByRole('link', { name: 'Resend Code' }).click();
await expect(page.locator('section')).toContainText('A 6-digit verification code has been sent to {0}. The code expires shortly, so please enter it soon.');
await page.getByRole('textbox', { name: 'Verification Code' }).click();
await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
await expect(page.locator('section')).toContainText('The code you entered is incorrect. Please try again.');
await page.getByRole('textbox', { name: 'Verification Code' }).click();
await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
await expect(page.locator('section')).toContainText('The code you entered is incorrect. Please try again.');
await page.getByRole('textbox', { name: 'Verification Code' }).click();
await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
await expect(page.locator('section')).toContainText('The code you entered is incorrect. Please try again.');
await page.getByRole('textbox', { name: 'Verification Code' }).click();
await page.getByRole('textbox', { name: 'Verification Code' }).fill('123456');
await expect(page.locator('section')).toContainText('Too many attempts. Please request a new code.');
await expect(page.locator('form[name="mz-loginform"]')).toContainText('Request New Code');
await page.getByRole('link', { name: 'Request New Code' }).click();
await expect(page.locator('section')).toContainText('A 6-digit verification code has been sent to {0}. The code expires shortly, so please enter it soon.');
await page.getByRole('link', { name: '‚Üê Back to Login' }).click();
await expect(page.locator('form[name="mz-loginform"]')).toContainText('User Name or Email Address');
});